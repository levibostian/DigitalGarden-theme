name: Pull requests
on: pull_request

jobs:
  site-test:
    name: Site test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./exampleSite
    steps:
      - uses: actions/checkout@v2
      - name: Prepare example site 
        run: |
          mkdir themes && ln -s ../../ themes/DigitalGarden      
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: '0.80.0'
          extended: true
      - name: Build Hugo site
        run: hugo --minify        
      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v1.1
        id: netlify-deploy
        with:
          publish-dir: './exampleSite/public'
          production-branch: master
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "GitHub Action deploy PR: ${{ github.event.pull_request.title }}"
          enable-pull-request-comment: true
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1
      # - name: Wait for the Netlify Preview
      #   uses: jakepartusch/wait-for-netlify-action@v1
      #   id: netlify-wait
      #   with:
      #     site_name: 'digitalgarden-theme'
      - name: Lighthouse test deployment 
        id: lighthouse_audit
        uses: treosh/lighthouse-ci-action@v7
        with:
          urls: '${{ steps.netlify-deploy.outputs.deploy-url }}'
          # budgetPath: ./budget.json # test performance budgets
          uploadArtifacts: true # save results as an action artifacts
          temporaryPublicStorage: true # upload lighthouse report to the temporary storage

      # Time to make something useful from the lighthouse CI step. 
      # Thanks, https://github.com/OskarAhl/Lighthouse-github-action-comment
      - name: Format lighthouse score
        id: format_lighthouse_score
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const result = ${{ steps.lighthouse_audit.outputs.manifest }}[0].summary
            const links = ${{ steps.lighthouse_audit.outputs.links }}
            const formatResult = (res) => Math.round((res * 100))
            Object.keys(result).forEach(key => result[key] = formatResult(result[key]))
            const score = res => res >= 90 ? 'üü¢' : res >= 50 ? 'üü†' : 'üî¥'
            const comment = [
                `‚ö°Ô∏è [Lighthouse report](${Object.values(links)[0]}) for the changes in this PR:`,
                '| Category | Score |',
                '| --- | --- |',
                `| ${score(result.performance)} Performance | ${result.performance} |`,
                `| ${score(result.accessibility)} Accessibility | ${result.accessibility} |`,
                `| ${score(result['best-practices'])} Best practices | ${result['best-practices']} |`,
                `| ${score(result.seo)} SEO | ${result.seo} |`,
                `| ${score(result.pwa)} PWA | ${result.pwa} |`,
                ' ',
                `*Lighthouse ran on [${Object.keys(links)[0]}](${Object.keys(links)[0]})*`
            ].join('\n')
             core.setOutput("comment", comment); 
      - name: Add comment to PR
        id: comment_to_pr
        uses: marocchino/sticky-pull-request-comment@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ github.event.issue.number }}
          header: lighthouse
          message: |
            ${{ steps.format_lighthouse_score.outputs.comment }}

